@model DocumentManager.MVC.ViewModels.IncomingDocumentIndexViewModel

@{
    ViewData["Title"] = "Danh sách Tài liệu đến";
    var pagedResult = Model.PagedDocuments;
}

<h1>@ViewData["Title"]</h1>

<div class="row mb-3">
    <!-- Form tìm kiếm -->
    <div class="col-md-6">
        <form asp-action="Index" method="get">
            <div class="input-group">
                <input type="text" name="searchQuery" class="form-control" placeholder="Nhập số tài liệu hoặc nội dung..." value="@Model.SearchQuery">
                <button class="btn btn-primary" type="submit"><i class="fas fa-search"></i> Tìm kiếm</button>
            </div>
        </form>
    </div>
    <!-- Nút tạo mới -->
    <div class="col-md-6 text-end">
        <a asp-action="Create" class="btn btn-success"><i class="fas fa-plus"></i> Phát hành Tài liệu đến</a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered align-middle">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.PagedDocuments.Items.First().IncomingDocumentNumber)</th>
                <th>@Html.DisplayNameFor(model => model.PagedDocuments.Items.First().DocumentContent)</th>
                <th>@Html.DisplayNameFor(model => model.PagedDocuments.Items.First().IssuingUnitName)</th>
                <th>@Html.DisplayNameFor(model => model.PagedDocuments.Items.First().ReleaseDate)</th>
                <th style="width: 120px; text-align: center;">Hành động</th>
            </tr>
        </thead>
        <tbody>
            @if (pagedResult != null && pagedResult.Items.Any())
            {
                @foreach (var item in pagedResult.Items)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.IncomingDocumentNumber)</td>
                        <td class="text-truncate" style="max-width: 300px;">@Html.DisplayFor(modelItem => item.DocumentContent)</td>
                        <td>@Html.DisplayFor(modelItem => item.IssuingUnitName)</td>
                        <td>@item.ReleaseDate.ToString("dd/MM/yyyy")</td>
                        <td class="text-center">
                            <div class="btn-group">
                                <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-secondary" title="Xem chi tiết"><i class="fas fa-info-circle"></i></a>
                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-info" title="Chỉnh sửa"><i class="fas fa-edit"></i></a>
                                <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm btn-danger" title="Xóa"><i class="fas fa-trash-alt"></i></a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">Không tìm thấy tài liệu nào.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Khu vực phân trang -->
@if (pagedResult != null && pagedResult.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @{
                var prevDisabled = !pagedResult.HasPreviousPage ? "disabled" : "";
            }
            <li class="page-item @prevDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(pagedResult.PageNumber - 1)"
                   asp-route-pageSize="@pagedResult.PageSize"
                   asp-route-searchQuery="@Model.SearchQuery">Trước</a>
            </li>

            @for (int i = 1; i <= pagedResult.TotalPages; i++)
            {
                <li class="page-item @(i == pagedResult.PageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-pageSize="@pagedResult.PageSize"
                       asp-route-searchQuery="@Model.SearchQuery">@i</a>
                </li>
            }

            @{
                var nextDisabled = !pagedResult.HasNextPage ? "disabled" : "";
            }
            <li class="page-item @nextDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(pagedResult.PageNumber + 1)"
                   asp-route-pageSize="@pagedResult.PageSize"
                   asp-route-searchQuery="@Model.SearchQuery">Sau</a>
            </li>
        </ul>
    </nav>
}